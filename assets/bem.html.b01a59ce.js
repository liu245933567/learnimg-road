import{_ as s,r as t,o as p,c as e,a,b as o,d as c,e as l}from"./app.b6fa9576.js";const u={},i=l(`<h1 id="bem-命名" tabindex="-1"><a class="header-anchor" href="#bem-命名" aria-hidden="true">#</a> BEM 命名</h1><h2 id="什么是-bem-命名规范" tabindex="-1"><a class="header-anchor" href="#什么是-bem-命名规范" aria-hidden="true">#</a> 什么是 BEM 命名规范？</h2><p>Bem 是块（block）、元素（element）、修饰符（modifier）的简写，由 Yandex 团队提出的一种前端 CSS 命名方法论。</p><p><code>-</code> 中划线 ：仅作为连字符使用，表示某个块或者某个子元素的多单词之间的连接记号。</p><p><code>__</code> 双下划线：双下划线用来连接块和块的子元素</p><p><code>--</code> 双中化划线：单下划线用来描述一个块或者块的子元素的一种状态</p><p>BEM 是一个简单又非常有用的命名约定。让你的前端代码更容易阅读和理解，更容易协作，更容易控制，更加健壮和明确，而且更加严密。</p><h2 id="bem-命名模式" tabindex="-1"><a class="header-anchor" href="#bem-命名模式" aria-hidden="true">#</a> BEM 命名模式</h2><p>BEM 命名约定的模式是：我们以一个 Layout 组件为例</p><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>layout layout--mobile<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>layout__header<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>头部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>layout__content layout__content--red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>内容部分<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>layout__footer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>页脚<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><blockquote><p>每一个块名应该有一个命名空间（前缀）如上面的 <code>layout</code></p></blockquote><ul><li><code>layout</code> 代表了更高级别的抽象或组件。</li><li><code>layout__header</code> <code>layout__content</code> <code>layout__footer</code> 代表 <code>layout</code> 的后代，用于形成一个完整的 <code>layout</code> 的整体</li><li><code>layout--mobile</code> <code>layout__content--red</code> 分别代表 <code>layout</code> <code>layout__content</code> 的不同状态</li></ul><h2 id="bem-命名法的好处" tabindex="-1"><a class="header-anchor" href="#bem-命名法的好处" aria-hidden="true">#</a> BEM 命名法的好处</h2><p>BEM 的关键是，可以获得更多的描述和更加清晰的结构，从其名字可以知道某个标记的含义。于是，通过查看 HTML 代码中的 class 属性，就能知道元素之间的关联。</p><blockquote><p>常规的命名法示例：</p></blockquote><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>article<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>body<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button-primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button-success<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>这种写法从 DOM 结构和类命名上可以了解每个元素的意义，但无法明确其真实的层级关系。在 css 定义时，也必须依靠层级选择器来限定约束作用域，以避免跨组件的样式污染</p><blockquote><p>使用了 BEM 命名方法的示例：</p></blockquote><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>article<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>article__body<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>article__button--primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>article__button--success<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>通过 BEM 命名方式，模块层级关系简单清晰，而且 css 书写上也不必作过多的层级选择。</p><h2 id="如何使用-bem-命名法" tabindex="-1"><a class="header-anchor" href="#如何使用-bem-命名法" aria-hidden="true">#</a> 如何使用 BEM 命名法</h2><h3 id="什么时候应该用-bem-格式" tabindex="-1"><a class="header-anchor" href="#什么时候应该用-bem-格式" aria-hidden="true">#</a> 什么时候应该用 BEM 格式</h3><ul><li>使用 BEM 的诀窍是，你要知道什么时候哪些东西是应该写成 BEM 格式的。</li><li>并不是每个地方都应该使用 BEM 命名方式。当需要明确关联性的模块关系时，应当使用 BEM 格式。</li><li>比如只是一条公共的单独的样式，就没有使用 BEM 格式的意义：</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.hide</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> none <span class="token important">!important</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在-css-预处理器中使用-bem-格式" tabindex="-1"><a class="header-anchor" href="#在-css-预处理器中使用-bem-格式" aria-hidden="true">#</a> 在 CSS 预处理器中使用 BEM 格式</h3><ul><li>BEM 的一个槽点是，命名方式长而难看，书写不雅。相比 BEM 格式带来的便利来说，我们应客观看待。</li><li>而且，一般来说会使用通过 LESS/SASS 等预处理器语言来编写 CSS，利用其语言特性书写起来要简单很多。</li></ul><blockquote><p>以 LESS 为例：</p></blockquote><div class="language-less line-numbers-mode" data-ext="less"><pre class="language-less"><code><span class="token selector">.article</span> <span class="token punctuation">{</span>
  <span class="token property">max-width</span><span class="token punctuation">:</span> 1200px<span class="token punctuation">;</span>
  <span class="token selector">&amp;__body</span> <span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token selector">&amp;__button</span> <span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 5px 8px<span class="token punctuation">;</span>
    <span class="token selector">&amp;--primary</span> <span class="token punctuation">{</span>
      <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token selector">&amp;--success</span> <span class="token punctuation">{</span>
      <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="在流行框架的组件中使用-bem-格式" tabindex="-1"><a class="header-anchor" href="#在流行框架的组件中使用-bem-格式" aria-hidden="true">#</a> 在流行框架的组件中使用 BEM 格式</h3><ul><li>在当前流行的 Vue.js / React / Angular 等前端框架中，都有 CSS 组件级作用域的编译实现，其基本原理均为利用 CSS 属性选择器特性，为不同的组件生成不同的属性选择器。</li><li>当你选择了这种局部作用域的写法时，在较小的组件中，BEM 格式可能显得没那么重要。但对于公共的、全局性的模块样式定义，还是推荐使用 BEM 格式。</li><li>另外，对于对外发布的公共组件来说，一般为了风格的可定制性，都不会使用这种局部作用域方式来定义组件样式。此时使用 BEM 格式也会大显其彩。</li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ul><li>BEM 最难的部分之一是明确作用域是从哪开始和到哪结束的，以及什么时候使用或不使用它。随着不断使用的经验积累，你慢慢就会知道怎么用，这些问题也不再是问题。技术无好坏，合适方最好。</li></ul><h2 id="推荐写法和风格" tabindex="-1"><a class="header-anchor" href="#推荐写法和风格" aria-hidden="true">#</a> 推荐写法和风格</h2><ul><li>在深层次嵌套的 DOM</li><li>结构下，应避免过长的样式名称定义。</li><li>层级最后不要超过 4 级，不然增加阅读的理解难度</li><li>避免 <code>.block__el1__el2</code> 的格式</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.form</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.form--theme-xmas</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.form--simple</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.form__input</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.form__submit</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
  <span class="token selector">.form__submit--disabled</span> <span class="token punctuation">{</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

// 对应的HTML结构如下：
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form form--theme-xmas form--simple<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form__input<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form__submit form__submit--disabled<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相关参考</p>`,36),k={href:"https://juejin.cn/post/6844903672162304013",target:"_blank",rel:"noopener noreferrer"};function r(d,m){const n=t("ExternalLinkIcon");return p(),e("div",null,[i,a("p",null,[a("a",k,[o("CSS — BEM 命名规范"),c(n)])])])}const g=s(u,[["render",r],["__file","bem.html.vue"]]);export{g as default};
